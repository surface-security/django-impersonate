[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "django-impersonator"
version = "0.0.2"
authors = [
    {name = "InfoSec Engineering", email = "surface@paddypowerbetfair.com"},
]
description = "Impersonate middleware to let you impersonate other users."
readme = "README.md"
requires-python = ">=3.7"
keywords = ["django", "impersonate"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Environment :: Web Environment",
    "Topic :: Software Development",
]
dependencies = [
    "Django >= 3.1, < 5.0",
]

[project.optional-dependencies]
dev = ["black==23.1.0", "ruff==0.0.256"]

[tool.setuptools]
packages = ["impersonate"]

[tool.coverage.run]
source = ["impersonate"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "testapp.settings"
python_files = [
    "tests.py",
    "test_*.py",
]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.venv3
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
exclude = [
    '.git',
    '__pycache__',
    'venv',
    'venv3',
]
ignore = []
line-length = 120
select = [
    'E',
    'F',
    'W',
    "I001",
]
src = ['impersonate']
